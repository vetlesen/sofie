{"version":3,"file":"context.js","sources":["../src/context.ts"],"sourcesContent":["import { createContext } from 'react'\n\nimport { NoStoreContext } from './no-store'\nimport { DefineListenerContext } from './types'\nimport { QueryCacheKey } from './utils'\n\n/**\n * @internal\n */\nexport const defineListenerContext =\n  createContext<DefineListenerContext>(NoStoreContext)\n\n/**\n * If it's `null` then the listener should be treated as `success`, otherwise if a listener isn't in the array it should be considered as `loading`\n * @internal\n */\nexport const LoadedListenersContext = createContext<QueryCacheKey[] | null>(\n  null,\n)\n\n/**\n * Aids in debugging, notifying if the parent has a GroqStoreProvider, or a LiveStoreProvider, and is thus `live`.\n * This is helpful as the `useLiveQuery` hook itself works even if no provider is present, but it will not be `live`.\n * @internal\n */\nexport const IsEnabledContext = createContext<boolean>(false)\n"],"names":["defineListenerContext","createContext","NoStoreContext","LoadedListenersContext","IsEnabledContext"],"mappings":";;AASa,MAAAA,qBAAA,GACXC,cAAqCC,cAAc,CAAA;AAM9C,MAAMC,sBAAyB,GAAAF,aAAA,CACpC,IACF,CAAA;AAOa,MAAAG,gBAAA,GAAmBH,cAAuB,KAAK,CAAA;"}