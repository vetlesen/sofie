import { useContext, useMemo, useState, useCallback } from 'react';
import isFastEqual from 'react-fast-compare';
import { useSyncExternalStoreWithSelector } from 'use-sync-external-store/with-selector';
import { defineListenerContext, LoadedListenersContext, IsEnabledContext } from './context.js';
import { useParams, getQueryCacheKey } from './utils.js';
function useLiveQuery(initialData, query, queryParams, options) {
  const {
    isEqual = isFastEqual
  } = options || {};
  const defineStore = useContext(defineListenerContext);
  const params = useParams(queryParams);
  const store = useMemo(() => defineStore(initialData, query, params), [defineStore, initialData, params, query]);
  const [serverSnapshot] = useState(() => {
    if (initialData === void 0) {
      throw new Error("initialSnapshot can't be undefined, if you don't want an initial value use null instead");
    }
    try {
      return JSON.parse(JSON.stringify(initialData));
    } catch (error) {
      console.warn("Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable", {
        initialSnapshot: initialData,
        error
      });
      return initialData;
    }
  });
  const getServerSnapshot = useCallback(() => serverSnapshot, [serverSnapshot]);
  const selector = useCallback(snapshot2 => snapshot2, []);
  const snapshot = useSyncExternalStoreWithSelector(store.subscribe, store.getSnapshot, getServerSnapshot, selector, isEqual);
  const loading = useLiveQueryIsLoading(query, params);
  return [snapshot, loading];
}
function useLiveQueryIsLoading(query, params) {
  const loadedListeners = useContext(LoadedListenersContext);
  const key = useMemo(() => getQueryCacheKey(query, params), [params, query]);
  return useMemo(() => {
    if (Array.isArray(loadedListeners)) {
      return loadedListeners.includes(key) ? false : true;
    }
    return false;
  }, [key, loadedListeners]);
}
function useIsEnabled() {
  return useContext(IsEnabledContext);
}
export { useIsEnabled, useLiveQuery };
//# sourceMappingURL=hooks.js.map
