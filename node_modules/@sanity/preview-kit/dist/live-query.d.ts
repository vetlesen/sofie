/// <reference types="react" />

import { QueryParams as ClientQueryParams } from '@sanity/client'
import { ComponentType } from 'react'
import type { PropsWithChildren } from 'react'

export { ClientQueryParams }

/**
 * This is an experimental new API that might have breaking changes in minor versions.
 * @alpha */
declare const LiveQuery: ComponentType<
  LiveQueryProps<unknown, ClientQueryParams>
>
export { LiveQuery }
export default LiveQuery

export declare type LiveQueryClientComponentProps<QueryResult, QueryParams> =
  PropsWithChildren<{
    initialData: QueryResult
    query: string
    params?: QueryParams | undefined
  }>

export declare interface LiveQueryProps<
  QueryResult,
  QueryParams extends ClientQueryParams = ClientQueryParams,
> extends LiveQueryClientComponentProps<QueryResult, QueryParams> {
  enabled: boolean
  as?: React.ComponentType<any>
}

export {}
