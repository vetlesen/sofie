import { getQueryCacheKey } from './utils.js';
const snapshots = /* @__PURE__ */new Map();
const deps = /* @__PURE__ */new Map();
const NoStoreContext = function defineListener(initialSnapshot, query, params) {
  const key = getQueryCacheKey(query, params);
  snapshots.set(key, initialSnapshot);
  if (!deps.has(key)) {
    deps.set(key, 0);
  }
  const subscribe = () => {
    deps.set(key, deps.get(key) + 1);
    return () => {
      deps.set(key, deps.get(key) - 1);
      if (deps.get(key) === 0) {
        snapshots.delete(key);
      }
    };
  };
  const getSnapshot = () => snapshots.has(key) ? snapshots.get(key) : initialSnapshot;
  return {
    subscribe,
    getSnapshot
  };
};
export { NoStoreContext };
//# sourceMappingURL=no-store.js.map
