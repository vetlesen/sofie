{"version":3,"file":"createLiveQueryProvider.js","sources":["../../src/LiveQueryProvider/createLiveQueryProvider.tsx"],"sourcesContent":["/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { memo, Suspense, useEffect, useMemo, useState } from 'react'\n\nimport type { LiveQueryProviderProps, Logger } from '../types'\nimport { DEFAULT_MAX_DOCUMENTS, DEFAULT_TAG } from '../utils'\n\nexport type { LiveQueryProviderProps, Logger }\nexport type { CacheOptions } from '../types'\n\n/**\n * @internal\n */\nexport function createLiveQueryProvider(options: {\n  GroqStoreProvider: React.ComponentType<LiveQueryProviderProps>\n  LiveStoreProvider: React.ComponentType<LiveQueryProviderProps>\n}): React.ComponentType<LiveQueryProviderProps> {\n  const { GroqStoreProvider, LiveStoreProvider } = options\n\n  const SelectStoreProvider = memo((props: LiveQueryProviderProps) => {\n    const { children, refreshInterval, client, cache, logger } = props\n    const maxDocuments = cache?.maxDocuments ?? DEFAULT_MAX_DOCUMENTS\n    const [documentsCount, setDocumentsCount] = useState<number | null>(null)\n    const [error, setError] = useState<Error | null>(null)\n    const [includeTypes] = useState(() => cache?.includeTypes ?? [])\n\n    // Rethrow errors to the nearest error boundary\n    if (error) {\n      throw error\n    }\n\n    useEffect(() => {\n      if (documentsCount !== null) {\n        return\n      }\n\n      logger?.log('[@sanity/preview-kit]: fetch documents count')\n      const controller = new AbortController()\n      client\n        .fetch<number>(\n          includeTypes.length > 0\n            ? 'count(*[_type in $includeTypes])'\n            : 'count(*)',\n          { includeTypes },\n          { filterResponse: true, signal: controller.signal },\n        )\n        .then((result) => {\n          logger?.log('[@sanity/preview-kit]: documents count', result)\n          setDocumentsCount(result)\n        })\n        .catch((error) => {\n          if (error.name !== 'AbortError') {\n            setError(error)\n          }\n        })\n      return () => {\n        controller.abort()\n      }\n    }, [client, documentsCount, includeTypes, logger])\n\n    if (documentsCount === null) {\n      return children\n    }\n\n    if (refreshInterval && documentsCount >= maxDocuments) {\n      return (\n        <Suspense fallback={children}>\n          <LiveStoreProvider\n            client={client}\n            refreshInterval={refreshInterval}\n            turboSourceMap={false}\n            logger={logger}\n          >\n            {children}\n          </LiveStoreProvider>\n        </Suspense>\n      )\n    }\n\n    if (documentsCount >= maxDocuments) {\n      throw new Error(\n        `[@sanity/preview-kit]: You have ${documentsCount} documents in your dataset, which is more than the maximum of ${maxDocuments} documents. Please reduce the number of documents in your dataset or increase the limit.`,\n      )\n    }\n\n    return (\n      <Suspense fallback={children}>\n        <GroqStoreProvider {...props}>{children}</GroqStoreProvider>\n      </Suspense>\n    )\n  })\n  SelectStoreProvider.displayName = 'SelectStoreProvider'\n\n  const LiveQueryProvider = memo((props: LiveQueryProviderProps) => {\n    const { children, refreshInterval = 10000, token } = props\n\n    if (!props.client) {\n      throw new Error(\n        'Missing a `client` prop with a configured Sanity client instance',\n      )\n    }\n\n    // Ensure these values are stable even if userland isn't memoizing properly\n    const [client] = useState(() =>\n      props.client.withConfig({\n        requestTagPrefix: props.client.config().requestTagPrefix || DEFAULT_TAG,\n        // Set the recommended defaults, this is a convenience to make it easier to share a client config from a server component to the client component\n        ...(token && {\n          token,\n          useCdn: false,\n          perspective: 'previewDrafts',\n          ignoreBrowserTokenWarning: true,\n        }),\n      }),\n    )\n    const [cache] = useState(() => props.cache)\n    const [logger] = useState(() => props.logger)\n    const turboSourceMap = useMemo(\n      () => props.turboSourceMap ?? client.config().resultSourceMap,\n      [client, props.turboSourceMap],\n    )\n\n    if (turboSourceMap) {\n      return (\n        <Suspense fallback={children}>\n          <LiveStoreProvider\n            client={client}\n            logger={logger}\n            refreshInterval={refreshInterval}\n            turboSourceMap={turboSourceMap}\n          >\n            {children}\n          </LiveStoreProvider>\n        </Suspense>\n      )\n    }\n\n    return (\n      <Suspense fallback={children}>\n        <SelectStoreProvider\n          client={client}\n          cache={cache}\n          logger={logger}\n          refreshInterval={refreshInterval}\n        >\n          {children}\n        </SelectStoreProvider>\n      </Suspense>\n    )\n  })\n  LiveQueryProvider.displayName = 'LiveQueryProvider'\n\n  return LiveQueryProvider\n}\n"],"names":["createLiveQueryProvider","options","GroqStoreProvider","LiveStoreProvider","SelectStoreProvider","memo","props","_a","children","refreshInterval","client","cache","logger","maxDocuments","DEFAULT_MAX_DOCUMENTS","documentsCount","setDocumentsCount","useState","error","setError","includeTypes","useEffect","log","controller","AbortController","fetch","length","filterResponse","signal","then","result","catch","name","abort","jsx","Suspense","fallback","turboSourceMap","Error","concat","displayName","LiveQueryProvider","token","withConfig","requestTagPrefix","config","DEFAULT_TAG","useCdn","perspective","ignoreBrowserTokenWarning","useMemo","resultSourceMap"],"mappings":";;;AAYO,SAASA,wBAAwBC,OAGQ,EAAA;EACxC,MAAA;IAAEC,iBAAmB;IAAAC;EAAsB,CAAA,GAAAF,OAAA;EAE3C,MAAAG,mBAAA,GAAsBC,IAAK,CAACC,KAAkC,IAAA;IAlBtE,IAAAC,EAAA;IAmBI,MAAM;MAAEC,QAAU;MAAAC,eAAA;MAAiBC,MAAQ;MAAAC,KAAA;MAAOC;IAAW,CAAA,GAAAN,KAAA;IACvD,MAAAO,YAAA,GAAA,CAAeN,EAAO,GAAAI,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAAE,YAAA,KAAP,IAAuB,GAAAN,EAAA,GAAAO,qBAAA;IAC5C,MAAM,CAACC,cAAA,EAAgBC,iBAAiB,CAAA,GAAIC,SAAwB,IAAI,CAAA;IACxE,MAAM,CAACC,KAAA,EAAOC,QAAQ,CAAA,GAAIF,SAAuB,IAAI,CAAA;IACrD,MAAM,CAACG,YAAY,CAAI,GAAAH,QAAA,CAAS,MAAG;MAvBvCV,IAAAA,GAAAA;MAuB0C,OAAA,CAAAA,GAAA,GAAAI,KAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,KAAA,CAAOS,YAAP,KAAA,IAAA,GAAAb,MAAuB,EAAC;IAAA,CAAC,CAAA;IAG/D,IAAIW,KAAO,EAAA;MACH,MAAAA,KAAA;IACR;IAEAG,SAAA,CAAU,MAAM;MACd,IAAIN,mBAAmB,IAAM,EAAA;QAC3B;MACF;MAEAH,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAQU,GAAI,CAAA,8CAAA,CAAA;MACN,MAAAC,UAAA,GAAa,IAAIC,eAAgB,EAAA;MAEpCd,MAAA,CAAAe,KAAA,CACCL,YAAA,CAAaM,MAAS,GAAA,CAAA,GAClB,kCACA,GAAA,UAAA,EACJ;QAAEN;MAAa,CAAA,EACf;QAAEO,cAAA,EAAgB,IAAM;QAAAC,MAAA,EAAQL,WAAWK;MAAO,CAAA,CACpD,CACCC,IAAK,CAACC,MAAW,IAAA;QAChBlB,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAQU,IAAI,wCAA0C,EAAAQ,MAAA,CAAA;QACtDd,iBAAA,CAAkBc,MAAM,CAAA;MAAA,CACzB,CAAA,CACAC,KAAM,CAACb,MAAU,IAAA;QACZA,IAAAA,MAAAA,CAAMc,SAAS,YAAc,EAAA;UAC/Bb,QAAA,CAASD,MAAK,CAAA;QAChB;MAAA,CACD,CAAA;MACH,OAAO,MAAM;QACXK,UAAA,CAAWU,KAAM,CAAA,CAAA;MAAA,CACnB;OACC,CAACvB,MAAA,EAAQK,cAAgB,EAAAK,YAAA,EAAcR,MAAM,CAAC,CAAA;IAEjD,IAAIG,mBAAmB,IAAM,EAAA;MACpB,OAAAP,QAAA;IACT;IAEI,IAAAC,eAAA,IAAmBM,kBAAkBF,YAAc,EAAA;MAEnD,OAAA,eAAAqB,GAAA,CAACC,QAAS,EAAA;QAAAC,QAAA,EAAU5B,QAClB;QAAAA,QAAA,EAAA,eAAA0B,GAAA,CAAC/B,iBAAA,EAAA;UACCO,MAAA;UACAD,eAAA;UACA4B,cAAgB,EAAA,KAAA;UAChBzB,MAAA;UAECJ;QAAA,CAEL;MAAA,CAAA,CAAA;IAEJ;IAEA,IAAIO,kBAAkBF,YAAc,EAAA;MAClC,MAAM,IAAIyB,KAAA,CACR,kCAAA,CAAmCC,MAAc,CAAAxB,cAAA,EAAA,gEAAA,CAAA,CAAiEwB,MAAY,CAAA1B,YAAA,EAAA,0FAAA,CAAA,CAChI;IACF;IAGE,OAAA,eAAAqB,GAAA,CAACC;MAASC,QAAU,EAAA5B,QAAA;MAClBA,6BAACN,iBAAmB,EAAA;QAAA,GAAGI,KAAQ;QAAAE;MAAS,CAAA;IAC1C,CAAA,CAAA;EAAA,CAEH,CAAA;EACDJ,mBAAA,CAAoBoC,WAAc,GAAA,qBAAA;EAE5B,MAAAC,iBAAA,GAAoBpC,IAAK,CAACC,KAAkC,IAAA;IAChE,MAAM;MAAEE,QAAA;MAAUC,eAAkB,GAAA,GAAA;MAAOiC;KAAU,GAAApC,KAAA;IAEjD,IAAA,CAACA,MAAMI,MAAQ,EAAA;MACjB,MAAM,IAAI4B,KAAA,CACR,kEAAA,CACF;IACF;IAGM,MAAA,CAAC5B,MAAM,CAAI,GAAAO,QAAA,CAAS,MACxBX,KAAM,CAAAI,MAAA,CAAOiC,UAAW,CAAA;MACtBC,gBAAkB,EAAAtC,KAAA,CAAMI,MAAO,CAAAmC,MAAA,GAASD,gBAAoB,IAAAE,WAAA;MAAA;MAE5D,IAAIJ,KAAS,IAAA;QACXA,KAAA;QACAK,MAAQ,EAAA,KAAA;QACRC,WAAa,EAAA,eAAA;QACbC,yBAA2B,EAAA;MAC7B,CAAA;IAAA,CACD,CAAA,CACH;IACA,MAAM,CAACtC,KAAK,CAAA,GAAIM,QAAS,CAAA,MAAMX,MAAMK,KAAK,CAAA;IAC1C,MAAM,CAACC,MAAM,CAAA,GAAIK,QAAS,CAAA,MAAMX,MAAMM,MAAM,CAAA;IAC5C,MAAMyB,cAAiB,GAAAa,OAAA,CACrB,MAAG;MArHT,IAAA3C,EAAA;MAqHY,OAAA,CAAAA,EAAA,GAAAD,KAAA,CAAM+B,cAAN,KAAA,IAAA,GAAA9B,EAAA,GAAwBG,MAAO,CAAAmC,MAAA,CAAS,CAAA,CAAAM,eAAA;IAAA,CAAA,EAC9C,CAACzC,MAAQ,EAAAJ,KAAA,CAAM+B,cAAc,CAAA,CAC/B;IAEA,IAAIA,cAAgB,EAAA;MAEhB,OAAA,eAAAH,GAAA,CAACC,QAAS,EAAA;QAAAC,QAAA,EAAU5B,QAClB;QAAAA,QAAA,EAAA,eAAA0B,GAAA,CAAC/B,iBAAA,EAAA;UACCO,MAAA;UACAE,MAAA;UACAH,eAAA;UACA4B,cAAA;UAEC7B;QAAA,CAEL;MAAA,CAAA,CAAA;IAEJ;IAGE,OAAA,eAAA0B,GAAA,CAACC,QAAS,EAAA;MAAAC,QAAA,EAAU5B,QAClB;MAAAA,QAAA,EAAA,eAAA0B,GAAA,CAAC9B,mBAAA,EAAA;QACCM,MAAA;QACAC,KAAA;QACAC,MAAA;QACAH,eAAA;QAECD;MAAA,CAEL;IAAA,CAAA,CAAA;EAAA,CAEH,CAAA;EACDiC,iBAAA,CAAkBD,WAAc,GAAA,mBAAA;EAEzB,OAAAC,iBAAA;AACT;"}