'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var react = require('react');
var context = require('../context.cjs');
var utils = require('../utils.cjs');
function useLiveQuery(initialData, query, queryParams2) {
  const defineStore = react.useContext(context.defineListenerContext);
  const queryParams = utils.useParams(queryParams2);
  const store = react.useMemo(() => defineStore(initialData, query, queryParams), [defineStore, initialData, queryParams, query]);
  const [serverSnapshot] = react.useState(() => {
    if (initialData === void 0) {
      throw new Error("initialSnapshot can't be undefined, if you don't want an initial value use null instead");
    }
    try {
      return JSON.parse(JSON.stringify(initialData));
    } catch (error) {
      console.warn("Failed to deep clone initialSnapshot, this is likely an error and an indication that the snapshot isn't JSON serializable", {
        initialSnapshot: initialData,
        error
      });
      return initialData;
    }
  });
  const getServerSnapshot = react.useCallback(() => serverSnapshot, [serverSnapshot]);
  return react.useSyncExternalStore(store.subscribe, store.getSnapshot, getServerSnapshot);
}
exports.useLiveQuery = useLiveQuery;
//# sourceMappingURL=useLiveQuery.cjs.map
