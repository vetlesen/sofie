'use strict';

Object.defineProperty(exports, '__esModule', {
  value: true
});
var react = require('react');
function getQueryCacheKey(query, params) {
  return "".concat(query, "-").concat(JSON.stringify(params));
}
function useParams(params) {
  const stringifiedParams = react.useMemo(() => JSON.stringify(params || {}), [params]);
  return react.useMemo(() => JSON.parse(stringifiedParams), [stringifiedParams]);
}
function useLoadingListenersContext(ready) {
  const [tick, forceUpdate] = react.useReducer(x => x + 1, 0);
  const mountedRef = react.useRef(true);
  const scheduleUpdate = react.useCallback(() => {
    if (mountedRef.current) {
      react.startTransition(() => forceUpdate());
    }
  }, []);
  react.useEffect(() => {
    mountedRef.current = true;
    scheduleUpdate();
    return () => {
      mountedRef.current = false;
    };
  }, [scheduleUpdate]);
  const loadedListenersContext = react.useMemo(() => tick ? [...ready] : [], [ready, tick]);
  return [loadedListenersContext, scheduleUpdate];
}
const DEFAULT_MAX_DOCUMENTS = 3e3;
const DEFAULT_TAG = "sanity.preview-kit";
exports.DEFAULT_MAX_DOCUMENTS = DEFAULT_MAX_DOCUMENTS;
exports.DEFAULT_TAG = DEFAULT_TAG;
exports.getQueryCacheKey = getQueryCacheKey;
exports.useLoadingListenersContext = useLoadingListenersContext;
exports.useParams = useParams;
//# sourceMappingURL=utils.cjs.map
