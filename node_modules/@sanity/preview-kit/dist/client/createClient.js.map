{"version":3,"file":"createClient.js","sources":["../../src/client/createClient.ts"],"sourcesContent":["import { createClient as _createClient, SanityClient } from '@sanity/client'\n\nimport { createHttpRequest } from './request'\nimport type { PreviewKitClientConfig } from './types'\n\nexport type * from './types'\nexport type * from '@sanity/client'\n\n/**\n * @alpha\n */\nexport const createClient = (config: PreviewKitClientConfig): SanityClient => {\n  const {\n    encodeSourceMap = detectEnableSourceMap(),\n    encodeSourceMapAtPath,\n    studioUrl = detectStudioUrl(),\n    logger,\n    ...options\n  } = config\n\n  let shouldEncodeSourceMap = encodeSourceMap === true\n\n  // If encodeSourceMap is set to 'auto', then we need to check if we're running on Vercel and on a preview deployment\n  if (encodeSourceMap === 'auto') {\n    shouldEncodeSourceMap = isVercelPreviewEnvironment()\n  }\n\n  if (typeof encodeSourceMap === 'string' && encodeSourceMap !== 'auto') {\n    throw new Error(\n      `Invalid value for encodeSourceMap: ${encodeSourceMap}. Did you mean 'auto'?`,\n    )\n  }\n\n  try {\n    if (shouldEncodeSourceMap && config.resultSourceMap !== false) {\n      if (!studioUrl) {\n        logger?.error?.(\n          '[@sanity/preview-kit]: Content source map enabled client is enabled, but no studioUrl is provided. Falling back to @sanity/client',\n        )\n        return _createClient(options)\n      }\n\n      logger?.debug?.(\n        '[@sanity/preview-kit]: Creating source map enabled client',\n      )\n      const httpRequest = createHttpRequest({\n        encodeSourceMapAtPath,\n        studioUrl,\n        logger,\n      })\n      return new SanityClient(httpRequest, {\n        ...options,\n        // Source maps by Content Lake are required in order to know where to insert the encoded source maps into strings\n        resultSourceMap: true,\n      })\n    }\n  } catch (err) {\n    // eslint-disable-next-line no-console\n    console.error(\n      '[@sanity/preview-kit]: Error creating client',\n      err,\n      'falling back to non-embedded sourcemap mode',\n    )\n  }\n  return _createClient(options)\n}\n\nfunction isVercelPreviewEnvironment() {\n  try {\n    // @ts-expect-error -- VERCEL_ENV is not a declared import.meta.env variable\n    return import.meta.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.VERCEL_ENV === 'preview'\n  } catch {\n    // ignore\n  }\n  return false\n}\n\nfunction detectEnableSourceMap(): PreviewKitClientConfig['encodeSourceMap'] {\n  try {\n    // @ts-expect-error -- SANITY_SOURCE_MAP is not a declared import.meta.env variable\n    return import.meta.env.SANITY_SOURCE_MAP === 'true' || 'auto'\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_SOURCE_MAP === 'true' || 'auto'\n  } catch {\n    // ignore\n  }\n  return 'auto'\n}\n\n// eslint-disable-next-line consistent-return\nfunction detectStudioUrl() {\n  try {\n    // @ts-expect-error -- SANITY_STUDIO_URL is not a declared import.meta.env variable\n    return import.meta.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n  try {\n    // eslint-disable-next-line no-process-env\n    return process.env.SANITY_STUDIO_URL\n  } catch {\n    // ignore\n  }\n}\n"],"names":["createClient","config","_a","_b","encodeSourceMap","detectEnableSourceMap","encodeSourceMapAtPath","studioUrl","detectStudioUrl","logger","options","shouldEncodeSourceMap","isVercelPreviewEnvironment","Error","concat","resultSourceMap","error","call","_createClient","debug","httpRequest","createHttpRequest","SanityClient","err","console","import","meta","env","VERCEL_ENV","process","SANITY_SOURCE_MAP","SANITY_STUDIO_URL"],"mappings":";;AAWa,MAAAA,YAAA,GAAgBC,MAAiD,IAAA;EAX9E,IAAAC,EAAA,EAAAC,EAAA;EAYQ,MAAA;IACJC,kBAAkBC,qBAAsB,CAAA,CAAA;IACxCC,qBAAA;IACAC,YAAYC,eAAgB,CAAA,CAAA;IAC5BC,MAAA;IACA,GAAGC;EACD,CAAA,GAAAT,MAAA;EAEJ,IAAIU,wBAAwBP,eAAoB,KAAA,IAAA;EAGhD,IAAIA,oBAAoB,MAAQ,EAAA;IAC9BO,qBAAA,GAAwBC,0BAA2B,CAAA,CAAA;EACrD;EAEA,IAAI,OAAOR,eAAA,KAAoB,QAAY,IAAAA,eAAA,KAAoB,MAAQ,EAAA;IACrE,MAAM,IAAIS,KAAA,CACR,sCAAsCC,MAAe,CAAAV,eAAA,EAAA,wBAAA,CAAA,CACvD;EACF;EAEI,IAAA;IACE,IAAAO,qBAAA,IAAyBV,MAAO,CAAAc,eAAA,KAAoB,KAAO,EAAA;MAC7D,IAAI,CAACR,SAAW,EAAA;QACd,CAAAL,EAAA,GAAAO,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAQO,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAd,EAAA,CAAAe,IAAA,CAAAR,MAAA,EACE,mIAAA,CAAA;QAEF,OAAOS,eAAcR,OAAO,CAAA;MAC9B;MAEA,CAAAP,EAAA,GAAAM,MAAA,IAAA,IAAA,GAAA,KAAA,CAAA,GAAAA,MAAA,CAAQU,KAAR,KAAA,IAAA,GAAA,KAAA,CAAA,GAAAhB,EAAA,CAAAc,IAAA,CAAAR,MAAA,EACE,2DAAA,CAAA;MAEF,MAAMW,cAAcC,iBAAkB,CAAA;QACpCf,qBAAA;QACAC,SAAA;QACAE;MAAA,CACD,CAAA;MACM,OAAA,IAAIa,aAAaF,WAAa,EAAA;QACnC,GAAGV,OAAA;QAAA;QAEHK,eAAiB,EAAA;MAAA,CAClB,CAAA;IACH;WACOQ,GAAK,EAAA;IAEJC,OAAA,CAAAR,KAAA,CACN,8CAAA,EACAO,GAAA,EACA,6CAAA,CACF;EACF;EACA,OAAOL,eAAcR,OAAO,CAAA;AAC9B,CAAA;AAEA,SAASE,0BAA6BA,CAAA,EAAA;EAChC,IAAA;IAEK,OAAAa,MAAA,CAAAC,IAAA,CAAYC,IAAIC,UAAe,KAAA,SAAA;EAAA,CAChC,CAAA,MAAA,CAER;EACI,IAAA;IAEK,OAAAC,OAAA,CAAQF,IAAIC,UAAe,KAAA,SAAA;EAAA,CAC5B,CAAA,MAAA,CAER;EACO,OAAA,KAAA;AACT;AAEA,SAASvB,qBAAmEA,CAAA,EAAA;EACtE,IAAA;IAEK,OAAAoB,MAAA,CAAAC,IAAA,CAAYC,GAAI,CAAAG,iBAAA,KAAsB,MAAU,IAAA,MAAA;EAAA,CACjD,CAAA,MAAA,CAER;EACI,IAAA;IAEK,OAAAD,OAAA,CAAQF,GAAI,CAAAG,iBAAA,KAAsB,MAAU,IAAA,MAAA;EAAA,CAC7C,CAAA,MAAA,CAER;EACO,OAAA,MAAA;AACT;AAGA,SAAStB,eAAkBA,CAAA,EAAA;EACrB,IAAA;IAEF,OAAOiB,YAAYE,GAAI,CAAAI,iBAAA;EAAA,CACjB,CAAA,MAAA,CAER;EACI,IAAA;IAEF,OAAOF,QAAQF,GAAI,CAAAI,iBAAA;EAAA,CACb,CAAA,MAAA,CAER;AACF;"}