{"version":3,"file":"SanityVision-11766910.js","sources":["../../src/apiVersions.ts","../../src/components/DelayedSpinner.tsx","../../src/codemirror/extensions.ts","../../src/codemirror/useCodemirrorTheme.ts","../../src/codemirror/VisionCodeMirror.styled.tsx","../../src/codemirror/VisionCodeMirror.tsx","../../src/util/isPlainObject.ts","../../src/util/localStorage.ts","../../src/util/parseApiQueryString.ts","../../src/util/validateApiVersion.ts","../../src/util/prefixApiVersion.ts","../../src/util/tryParseParams.ts","../../src/util/encodeQueryString.ts","../../src/perspectives.ts","../../src/util/resizeObserver.ts","../../src/components/ParamsEditor.tsx","../../src/components/ResultView.styled.tsx","../../src/components/ResultView.tsx","../../src/components/QueryErrorDialog.styled.tsx","../../src/components/QueryErrorDetails.tsx","../../src/components/QueryErrorDialog.tsx","../../src/components/PerspectivePopover.styled.tsx","../../src/components/PerspectivePopover.tsx","../../src/components/VisionGui.styled.tsx","../../src/components/VisionGui.tsx","../../src/hooks/useDatasets.ts","../../src/containers/VisionContainer.tsx","../../src/SanityVision.tsx"],"sourcesContent":["export const API_VERSIONS = ['v1', 'vX', 'v2021-03-25', 'v2021-10-21']\nexport const [DEFAULT_API_VERSION] = API_VERSIONS.slice(-1)\n","import React, {useEffect, useState} from 'react'\nimport {Spinner} from '@sanity/ui'\n\ninterface DelayedSpinnerProps {\n  delay?: number\n}\n\n// Waits for X ms before showing a spinner\nexport function DelayedSpinner(props: DelayedSpinnerProps) {\n  const [show, setShow] = useState(false)\n\n  useEffect(() => {\n    const timer = setTimeout(() => setShow(true), props.delay || 500)\n    return () => clearTimeout(timer)\n  }, [props.delay])\n\n  return show ? <Spinner muted size={4} /> : null\n}\n","import {history, defaultKeymap, historyKeymap} from '@codemirror/commands'\nimport {highlightSelectionMatches} from '@codemirror/search'\nimport {javascriptLanguage} from '@codemirror/lang-javascript'\nimport {closeBrackets} from '@codemirror/autocomplete'\nimport {\n  lineNumbers,\n  highlightActiveLineGutter,\n  highlightSpecialChars,\n  drawSelection,\n  highlightActiveLine,\n  keymap,\n} from '@codemirror/view'\nimport {\n  indentOnInput,\n  syntaxHighlighting,\n  defaultHighlightStyle,\n  bracketMatching,\n} from '@codemirror/language'\n\nexport const codemirrorExtensions = [\n  [javascriptLanguage],\n  lineNumbers(),\n  highlightActiveLine(),\n  highlightActiveLineGutter(),\n  highlightSelectionMatches(),\n  highlightSpecialChars(),\n  indentOnInput(),\n  bracketMatching(),\n  closeBrackets(),\n  history(),\n  drawSelection(),\n  syntaxHighlighting(defaultHighlightStyle, {fallback: true}),\n  keymap.of([defaultKeymap, historyKeymap].flat().filter(Boolean)),\n]\n","import {rem, Theme} from '@sanity/ui'\nimport {EditorView} from '@codemirror/view'\nimport {HighlightStyle, syntaxHighlighting} from '@codemirror/language'\nimport {useMemo} from 'react'\nimport {hues} from '@sanity/color'\nimport {tags as t} from '@lezer/highlight'\n\nexport function useCodemirrorTheme(theme: Theme) {\n  const cmTheme = useMemo(() => createTheme(theme), [theme])\n  const cmHighlight = useMemo(() => syntaxHighlighting(createHighlight(theme)), [theme])\n\n  return [cmTheme, cmHighlight]\n}\n\nfunction createTheme(theme: Theme) {\n  const {color, fonts} = theme.sanity\n  const card = color.card.enabled\n  const cursor = hues.blue[color.dark ? 400 : 500].hex\n  const selection = hues.gray[theme.sanity.color.dark ? 900 : 100].hex\n\n  return EditorView.theme(\n    {\n      '&': {\n        color: card.fg,\n        backgroundColor: card.bg,\n      },\n\n      '.cm-content': {\n        caretColor: cursor,\n      },\n\n      '.cm-editor': {\n        fontFamily: fonts.code.family,\n        fontSize: rem(fonts.code.sizes[1].fontSize),\n        lineHeight: 'inherit',\n      },\n\n      '.cm-cursor, .cm-dropCursor': {borderLeftColor: cursor},\n      '&.cm-focused .cm-selectionBackground, .cm-selectionBackground, .cm-content ::selection': {\n        backgroundColor: selection,\n      },\n\n      '.cm-panels': {backgroundColor: card.bg, color: card.fg},\n      '.cm-panels.cm-panels-top': {borderBottom: `2px solid ${card.border}`},\n      '.cm-panels.cm-panels-bottom': {borderTop: `2px solid ${card.border}`},\n    },\n    {dark: color.dark}\n  )\n}\n\nfunction createHighlight(theme: Theme) {\n  const c = theme.sanity.color.base\n  const s = theme.sanity.color.syntax\n  return HighlightStyle.define([\n    {tag: t.keyword, color: s.keyword},\n    {tag: [t.propertyName, t.name, t.deleted, t.character, t.macroName], color: s.property},\n    {tag: [t.function(t.variableName), t.labelName], color: s.function},\n    {tag: [t.color, t.constant(t.name), t.standard(t.name)], color: s.variable},\n    {tag: [t.definition(t.name), t.separator], color: s.constant},\n    {\n      tag: [\n        t.typeName,\n        t.className,\n        t.number,\n        t.changed,\n        t.annotation,\n        t.modifier,\n        t.self,\n        t.namespace,\n      ],\n      color: s.number,\n    },\n    {\n      tag: [t.operator, t.operatorKeyword, t.url, t.escape, t.regexp, t.link, t.special(t.string)],\n      color: s.operator,\n    },\n    {tag: [t.meta, t.comment], color: s.comment},\n    {tag: t.strong, fontWeight: 'bold'},\n    {tag: t.emphasis, fontStyle: 'italic'},\n    {tag: t.strikethrough, textDecoration: 'line-through'},\n    {tag: t.heading, fontWeight: 'bold', color: s.property},\n    {tag: [t.atom, t.bool, t.special(t.variableName)], color: s.boolean},\n    {tag: [t.processingInstruction, t.string, t.inserted], color: s.string},\n    {tag: t.invalid, color: c.fg},\n  ])\n}\n","import {rem} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const EditorRoot = styled.div`\n  width: 100%;\n  box-sizing: border-box;\n  height: 100%;\n  overflow: hidden;\n  overflow: clip;\n  position: relative;\n  display: flex;\n\n  & .cm-theme {\n    width: 100%;\n  }\n\n  & .cm-editor {\n    height: 100%;\n\n    font-size: 16px;\n    line-height: 21px;\n  }\n\n  & .cm-line {\n    padding-left: ${({theme}) => rem(theme.sanity.space[3])};\n  }\n\n  & .cm-content {\n    border-right-width: ${({theme}) => rem(theme.sanity.space[4])} !important;\n    padding-top: ${({theme}) => rem(theme.sanity.space[5])};\n  }\n`\n","import React from 'react'\nimport {useTheme} from '@sanity/ui'\nimport CodeMirror, {ReactCodeMirrorProps} from '@uiw/react-codemirror'\nimport {codemirrorExtensions} from './extensions'\nimport {useCodemirrorTheme} from './useCodemirrorTheme'\nimport {EditorRoot} from './VisionCodeMirror.styled'\n\nexport function VisionCodeMirror(\n  props: Omit<ReactCodeMirrorProps, 'basicSetup' | 'theme' | 'extensions'>\n) {\n  const sanityTheme = useTheme()\n  const theme = useCodemirrorTheme(sanityTheme)\n\n  return (\n    <EditorRoot>\n      <CodeMirror basicSetup={false} theme={theme} extensions={codemirrorExtensions} {...props} />\n    </EditorRoot>\n  )\n}\n","export function isPlainObject(obj: unknown): obj is Record<string, unknown> {\n  return (\n    !!obj && typeof obj === 'object' && Object.prototype.toString.call(obj) === '[object Object]'\n  )\n}\n","import {isPlainObject} from './isPlainObject'\n\nconst hasLocalStorage = supportsLocalStorage()\n\nexport interface LocalStorageish {\n  get: <T>(key: string, defaultVal: T) => T\n  set: <T>(key: string, value: T) => T\n  merge: <T>(props: T) => T\n}\n\nexport function getLocalStorage(namespace: string): LocalStorageish {\n  const storageKey = `sanityVision:${namespace}`\n  let loadedState: Record<string, unknown> | null = null\n\n  return {get, set, merge}\n\n  function get<T>(key: string, defaultVal: T): T {\n    const state = ensureState()\n    return typeof state[key] === 'undefined' ? defaultVal : (state[key] as T)\n  }\n\n  function set<T>(key: string, value: T): T {\n    const state = ensureState()\n    state[key] = value\n    localStorage.setItem(storageKey, JSON.stringify(loadedState))\n    return value\n  }\n\n  function merge<T>(props: T): T {\n    const state = {...ensureState(), ...props}\n    localStorage.setItem(storageKey, JSON.stringify(state))\n    return state\n  }\n\n  function ensureState(): Record<string, unknown> {\n    if (loadedState === null) {\n      loadedState = loadState()\n    }\n\n    return loadedState\n  }\n\n  function loadState() {\n    if (!hasLocalStorage) {\n      return {}\n    }\n\n    try {\n      const stored = JSON.parse(localStorage.getItem(storageKey) || '{}')\n      return isPlainObject(stored) ? stored : {}\n    } catch (err) {\n      return {}\n    }\n  }\n}\n\nfunction supportsLocalStorage() {\n  const mod = 'lsCheck'\n  try {\n    localStorage.setItem(mod, mod)\n    localStorage.removeItem(mod)\n    return true\n  } catch (err) {\n    return false\n  }\n}\n","export interface ParsedApiQueryString {\n  query: string\n  params: Record<string, unknown>\n  options: Record<string, string>\n}\n\nexport function parseApiQueryString(qs: URLSearchParams): ParsedApiQueryString {\n  const params: Record<string, unknown> = {}\n  const options: Record<string, string> = {}\n\n  for (const [key, value] of qs.entries()) {\n    if (key[0] === '$') {\n      params[key.slice(1)] = JSON.parse(value)\n      continue\n    }\n\n    if (key === 'perspective') {\n      options[key] = value\n      continue\n    }\n  }\n\n  return {query: qs.get('query') || '', params, options}\n}\n","export function validateApiVersion(apiVersion: string): boolean {\n  const parseableApiVersion = apiVersion.replace(/^v/, '').trim().toUpperCase()\n\n  const isValidApiVersion =\n    parseableApiVersion.length > 0 &&\n    (parseableApiVersion === 'X' ||\n      (/^\\d{4}-\\d{2}-\\d{2}$/.test(parseableApiVersion) && !isNaN(Date.parse(parseableApiVersion))))\n\n  return isValidApiVersion\n}\n","export function prefixApiVersion(version: string): string {\n  if (version[0] !== 'v' && version !== 'other') {\n    return `v${version}`\n  }\n\n  return version\n}\n","import JSON5 from 'json5'\n\nexport function tryParseParams(val: string): Record<string, unknown> | Error {\n  try {\n    const parsed = val ? JSON5.parse(val) : {}\n    return typeof parsed === 'object' && parsed && !Array.isArray(parsed) ? parsed : {}\n  } catch (err) {\n    // JSON5 always prefixes the error message with JSON5:, so we remove it\n    // to clean up the error tooltip\n    err.message = `Parameters are not valid JSON:\\n\\n${err.message.replace('JSON5:', '')}`\n    return err\n  }\n}\n","export function encodeQueryString(\n  query: string,\n  params: Record<string, unknown> = {},\n  options: Record<string, string> = {}\n): string {\n  const searchParams = new URLSearchParams()\n  searchParams.set('query', query)\n\n  for (const [key, value] of Object.entries(params)) {\n    searchParams.set(`$${key}`, JSON.stringify(value))\n  }\n\n  for (const [key, value] of Object.entries(options)) {\n    if (value) searchParams.set(key, `${value}`)\n  }\n\n  return `?${searchParams}`\n}\n","import type {ClientPerspective} from '@sanity/client'\n\nexport const PERSPECTIVES = ['raw', 'previewDrafts', 'published'] satisfies ClientPerspective[]\nexport const DEFAULT_PERSPECTIVE = PERSPECTIVES[0]\n\nexport function isPerspective(p: string): p is ClientPerspective {\n  return PERSPECTIVES.includes(p as ClientPerspective)\n}\n","import {ResizeObserver as ResizeObserverPolyfill} from '@juggle/resize-observer'\n\nexport const RO = typeof document === 'undefined' ? ResizeObserverPolyfill : window.ResizeObserver\n\nexport {RO as ResizeObserver}\n","import React, {useCallback, useEffect, useMemo, useState} from 'react'\nimport {debounce} from 'lodash'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\n\nconst defaultValue = `{\\n  \\n}`\n\nexport interface ParamsEditorChangeEvent {\n  parsed: Record<string, unknown>\n  raw: string\n  valid: boolean\n  error: string | undefined\n}\n\nexport interface ParamsEditorProps {\n  value: string\n  onChange: (changeEvt: ParamsEditorChangeEvent) => void\n}\n\nexport interface ParamsEditorChange {\n  valid: boolean\n}\n\nexport function ParamsEditor(props: ParamsEditorProps) {\n  const {onChange} = props\n  const {raw: value, error, parsed, valid} = eventFromValue(props.value)\n  const [isValid, setValid] = useState(valid)\n  const [init, setInit] = useState(false)\n\n  // Emit onChange on very first render\n  useEffect(() => {\n    if (!init) {\n      onChange({parsed, raw: value, valid: isValid, error})\n      setInit(true)\n    }\n  }, [error, init, isValid, onChange, parsed, value])\n\n  const handleChangeRaw = useCallback(\n    (newValue: string) => {\n      const event = eventFromValue(newValue)\n      setValid(event.valid)\n      onChange(event)\n    },\n    [onChange]\n  )\n\n  const handleChange = useMemo(() => debounce(handleChangeRaw, 333), [handleChangeRaw])\n  return <VisionCodeMirror value={props.value || defaultValue} onChange={handleChange} />\n}\n\nfunction eventFromValue(value: string): ParamsEditorChangeEvent {\n  const parsedParams = tryParseParams(value)\n  const params = parsedParams instanceof Error ? {} : parsedParams\n  const validationError = parsedParams instanceof Error ? parsedParams.message : undefined\n  const isValid = !validationError\n\n  return {\n    parsed: params,\n    raw: value,\n    valid: isValid,\n    error: validationError,\n  }\n}\n","import {rem, Theme} from '@sanity/ui'\nimport styled, {css} from 'styled-components'\n\nexport const ResultViewWrapper = styled.div(({theme}: {theme: Theme}) => {\n  const {color, fonts, space} = theme.sanity\n\n  return css`\n    & .json-inspector,\n    & .json-inspector .json-inspector__selection {\n      font-family: ${fonts.code.family};\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n      color: var(--card-code-fg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf {\n      padding-left: ${rem(space[4])};\n    }\n\n    & .json-inspector .json-inspector__leaf.json-inspector__leaf_root {\n      padding-top: ${rem(space[0])};\n      padding-left: 0;\n    }\n\n    & .json-inspector > .json-inspector__leaf_root > .json-inspector__line > .json-inspector__key {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__line {\n      display: block;\n      position: relative;\n      cursor: default;\n    }\n\n    & .json-inspector .json-inspector__line::after {\n      content: '';\n      position: absolute;\n      top: 0;\n      left: -200px;\n      right: -50px;\n      bottom: 0;\n      z-index: -1;\n      pointer-events: none;\n    }\n\n    & .json-inspector .json-inspector__line:hover::after {\n      background: var(--card-code-bg-color);\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line {\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__leaf_composite > .json-inspector__line::before {\n      content: '▸ ';\n      margin-left: calc(0px - ${rem(space[4])});\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    &\n      .json-inspector\n      .json-inspector__leaf_expanded.json-inspector__leaf_composite\n      > .json-inspector__line::before {\n      content: '▾ ';\n      font-size: ${fonts.code.sizes[2].fontSize}px;\n      line-height: ${fonts.code.sizes[2].lineHeight}px;\n    }\n\n    & .json-inspector .json-inspector__radio,\n    & .json-inspector .json-inspector__flatpath {\n      display: none;\n    }\n\n    & .json-inspector .json-inspector__value {\n      margin-left: ${rem(space[4] / 2)};\n    }\n\n    &\n      .json-inspector\n      > .json-inspector__leaf_root\n      > .json-inspector__line\n      > .json-inspector__key\n      + .json-inspector__value {\n      margin: 0;\n    }\n\n    & .json-inspector .json-inspector__key {\n      color: ${color.syntax.property};\n    }\n\n    & .json-inspector .json-inspector__value_helper,\n    & .json-inspector .json-inspector__value_null {\n      color: ${color.syntax.constant};\n    }\n\n    & .json-inspector .json-inspector__not-found {\n      padding-top: ${rem(space[2])};\n    }\n\n    & .json-inspector .json-inspector__value_string {\n      color: ${color.syntax.string};\n      word-break: break-word;\n    }\n\n    & .json-inspector .json-inspector__value_boolean {\n      color: ${color.syntax.boolean};\n    }\n\n    & .json-inspector .json-inspector__value_number {\n      color: ${color.syntax.number};\n    }\n\n    & .json-inspector .json-inspector__show-original {\n      display: inline-block;\n      padding: 0 6px;\n      cursor: pointer;\n    }\n\n    & .json-inspector .json-inspector__show-original:hover {\n      color: inherit;\n    }\n\n    & .json-inspector .json-inspector__show-original::before {\n      content: '↔';\n    }\n\n    & .json-inspector .json-inspector__show-original:hover::after {\n      content: ' expand';\n    }\n  `\n})\n","import React from 'react'\nimport HLRU from 'hashlru'\nimport JSONInspector from '@rexxars/react-json-inspector'\nimport {Code} from '@sanity/ui'\nimport {ResultViewWrapper} from './ResultView.styled'\n\nconst lru = HLRU(50000)\n\nexport function ResultView(props: {data: unknown}) {\n  const {data} = props\n\n  if (isRecord(data) || Array.isArray(data)) {\n    return (\n      <ResultViewWrapper>\n        <JSONInspector\n          data={data}\n          search={false}\n          isExpanded={isExpanded}\n          onClick={toggleExpanded}\n        />\n      </ResultViewWrapper>\n    )\n  }\n\n  return <Code language=\"json\">{JSON.stringify(data)}</Code>\n}\n\nfunction isExpanded(keyPath: string, value: unknown): boolean {\n  const depthLimit = 4\n  const cached = lru.get(keyPath) as boolean | undefined\n\n  if (typeof cached === 'boolean') {\n    return cached\n  }\n\n  const segments = keyPath.split('.', depthLimit)\n  if (segments.length === depthLimit) {\n    return false\n  }\n\n  if (Array.isArray(value)) {\n    return true\n  }\n\n  return isRecord(value) && !segments.some((key) => isArrayKeyOverLimit(key))\n}\n\nfunction toggleExpanded(event: {path: string}): void {\n  const {path} = event\n  const current = lru.get(path)\n\n  if (current === undefined) {\n    // something is wrong\n    return\n  }\n\n  lru.set(path, !current)\n}\n\nfunction isRecord(value: unknown): value is Record<string, unknown> {\n  return value !== null && typeof value === 'object' && !Array.isArray(value)\n}\n\nconst numeric = /^\\d+$/\nfunction isArrayKeyOverLimit(segment: string, limit = 10) {\n  return numeric.test(segment) && parseInt(segment, 10) > limit\n}\n","import {Code} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const ErrorCode = styled(Code)`\n  color: ${({theme}) => theme.sanity.color.muted.critical.enabled.fg};\n`\n","import React from 'react'\nimport {Box} from '@sanity/ui'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\ninterface ContentLakeQueryError {\n  details: {\n    query: string\n    start: number\n    end: number\n\n    lineNumber?: number\n    column?: number\n  }\n}\n\nexport function QueryErrorDetails({error}: {error: ContentLakeQueryError | Error}) {\n  if (!('details' in error)) {\n    return null\n  }\n\n  const details = {...error.details, ...mapToLegacyDetails(error.details)}\n  if (!details.line) {\n    return null\n  }\n\n  return (\n    <div>\n      <ErrorCode size={1}>{`${details.line}\\n${dashLine(\n        details.column,\n        details.columnEnd\n      )}`}</ErrorCode>\n      <Box marginTop={4}>\n        <ErrorCode size={1}>{`Line:   ${details.lineNumber}\\nColumn: ${details.column}`}</ErrorCode>\n      </Box>\n    </div>\n  )\n}\n\nfunction mapToLegacyDetails(details: ContentLakeQueryError['details']) {\n  if (!details || typeof details.query !== 'string' || typeof details.start !== 'number') {\n    return {}\n  }\n\n  const {query, start, end} = details\n  const lineStart = query.slice(0, start).lastIndexOf('\\n') + 1\n  const lineNumber = (query.slice(0, lineStart).match(/\\n/g) || []).length\n  const line = query.slice(lineStart, query.indexOf('\\n', lineStart))\n  const column = start - lineStart\n  const columnEnd = typeof end === 'number' ? end - lineStart : undefined\n\n  return {line, lineNumber, column, columnEnd}\n}\n\nfunction dashLine(column: number, columnEnd: number | undefined): string {\n  const line = '-'.repeat(column)\n  const hats = `^`.repeat(columnEnd ? columnEnd - column : 1)\n  return `${line}${hats}`\n}\n","import React from 'react'\nimport {Stack} from '@sanity/ui'\nimport {QueryErrorDetails} from './QueryErrorDetails'\nimport {ErrorCode} from './QueryErrorDialog.styled'\n\nexport function QueryErrorDialog(props: {error: Error}) {\n  return (\n    <Stack space={5} marginTop={2}>\n      <ErrorCode size={1}>{props.error.message}</ErrorCode>\n      <QueryErrorDetails error={props.error} />\n    </Stack>\n  )\n}\n","import {Box} from '@sanity/ui'\nimport styled from 'styled-components'\n\nexport const PerspectivePopoverContent = styled(Box)`\n  /* This limits the width of the popover content */\n  max-width: 240px;\n`\n\nexport const PerspectivePopoverLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n","import React, {useCallback, useState} from 'react'\nimport {Popover, Stack, Inline, Text, Card, Badge, Button, useClickOutside} from '@sanity/ui'\nimport {HelpCircleIcon} from '@sanity/icons'\nimport {PerspectivePopoverContent, PerspectivePopoverLink} from './PerspectivePopover.styled'\n\nexport function PerspectivePopover() {\n  const [open, setOpen] = useState(false)\n  const [buttonEl, setButtonEl] = useState<HTMLElement | null>(null)\n  const [popoverEl, setPopoverEl] = useState<HTMLElement | null>(null)\n\n  const handleClick = useCallback(() => setOpen((o) => !o), [])\n  const handleClickOutside = useCallback(() => setOpen(false), [])\n\n  useClickOutside(handleClickOutside, [buttonEl, popoverEl])\n\n  return (\n    <Popover\n      content={\n        <PerspectivePopoverContent>\n          <Stack space={4}>\n            <Inline space={2}>\n              <Text weight=\"medium\">Perspectives</Text>\n              <Badge tone=\"primary\">New</Badge>\n            </Inline>\n\n            <Card>\n              <Text muted>\n                Perspectives allow your query to run against different \"views\" of the content in\n                your dataset\n              </Text>\n            </Card>\n\n            <Card>\n              <Text>\n                <PerspectivePopoverLink href=\"https://sanity.io/docs/perspectives\" target=\"_blank\">\n                  Read docs &rarr;\n                </PerspectivePopoverLink>\n              </Text>\n            </Card>\n          </Stack>\n        </PerspectivePopoverContent>\n      }\n      placement=\"bottom-start\"\n      portal\n      padding={3}\n      ref={setPopoverEl}\n      open={open}\n    >\n      <Button\n        icon={HelpCircleIcon}\n        mode=\"bleed\"\n        padding={2}\n        tone=\"primary\"\n        fontSize={1}\n        ref={setButtonEl}\n        onClick={handleClick}\n        selected={open}\n      />\n    </Popover>\n  )\n}\n","import styled, {css} from 'styled-components'\nimport {Button, Card, Box, Flex, Label, Theme, rem} from '@sanity/ui'\n\nexport const Root = styled(Flex)`\n  .sidebarPanes .Pane {\n    overflow-y: auto;\n    overflow-x: hidden;\n  }\n\n  & .Resizer {\n    background: var(--card-border-color);\n    opacity: 1;\n    z-index: 1;\n    box-sizing: border-box;\n    background-clip: padding-box;\n    border: solid transparent;\n  }\n\n  & .Resizer:hover {\n    border-color: var(--card-shadow-ambient-color);\n  }\n\n  & .Resizer.horizontal {\n    height: 11px;\n    margin: -5px 0;\n    border-width: 5px 0;\n    cursor: row-resize;\n    width: 100%;\n    z-index: 4;\n  }\n\n  & .Resizer.vertical {\n    width: 11px;\n    margin: 0 -5px;\n    border-width: 0 5px;\n    cursor: col-resize;\n    z-index: 2; /* To prevent the resizer from being hidden behind CodeMirror scroll area */\n  }\n\n  .Resizer.disabled {\n    cursor: not-allowed;\n  }\n\n  .Resizer.disabled:hover {\n    border-color: transparent;\n  }\n`\n\nRoot.displayName = 'Root'\n\nexport const Header = styled(Card)`\n  border-bottom: 1px solid var(--card-border-color);\n`\n\nexport const StyledLabel = styled(Label)`\n  flex: 1;\n`\n\nexport const SplitpaneContainer = styled(Box)`\n  position: relative;\n`\n\nexport const QueryCopyLink = styled.a`\n  cursor: pointer;\n  margin-right: auto;\n`\n\nexport const InputBackgroundContainer = styled(Box)`\n  position: absolute;\n  top: 1rem;\n  left: 0;\n  padding: 0;\n  margin: 0;\n  z-index: 10;\n  right: 0;\n\n  ${StyledLabel} {\n    user-select: none;\n  }\n`\n\nexport const InputBackgroundContainerLeft = styled(InputBackgroundContainer)`\n  // This is so its aligned with the gutters of CodeMirror\n  left: 33px;\n`\n\nexport const InputContainer = styled(Card)`\n  width: 100%;\n  height: 100%;\n  position: relative;\n  flex-direction: column;\n`\n\nexport const ResultOuterContainer = styled(Flex)`\n  height: 100%;\n`\n\nexport const ResultInnerContainer = styled(Box)`\n  position: relative;\n`\n\nexport const ResultContainer = styled(Card)<{$isInvalid: boolean}>`\n  height: 100%;\n  width: 100%;\n  position: absolute;\n  max-width: 100%;\n\n  ${({$isInvalid}) =>\n    $isInvalid &&\n    css`\n      &:after {\n        background-color: var(--card-bg-color);\n        content: '';\n        position: absolute;\n        top: 0;\n        bottom: 0;\n        left: 0;\n        width: 100%;\n      }\n    `}\n`\n\nexport const Result = styled(Box)`\n  position: relative;\n  width: 100%;\n  height: 100%;\n  z-index: 20;\n`\n\nexport const TimingsFooter = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const TimingsCard = styled(Card)`\n  position: relative;\n`\n\nexport const TimingsContainer = styled(Box)`\n  width: 100%;\n  height: 100%;\n`\n\nexport const TimingsTextContainer = styled(Flex)`\n  height: 100%;\n  min-height: ${({theme}: {theme: Theme}) =>\n    rem(\n      theme.sanity.space[3] * 2 +\n        theme.sanity.fonts.text.sizes[2].lineHeight -\n        theme.sanity.fonts.text.sizes[2].ascenderHeight -\n        theme.sanity.fonts.text.sizes[2].descenderHeight\n    )};\n`\n\nexport const ControlsContainer = styled(Box)`\n  border-top: 1px solid var(--card-border-color);\n`\n\nexport const ButtonFullWidth = styled(Button)`\n  width: 100%;\n`\n","/* eslint-disable complexity */\nimport React, {ChangeEvent, type RefObject} from 'react'\nimport SplitPane from '@rexxars/react-split-pane'\nimport type {ListenEvent, MutationEvent, SanityClient, ClientPerspective} from '@sanity/client'\nimport {PlayIcon, StopIcon, CopyIcon, ErrorOutlineIcon} from '@sanity/icons'\nimport isHotkey from 'is-hotkey'\nimport {\n  Flex,\n  Card,\n  Stack,\n  Box,\n  Hotkeys,\n  Select,\n  Text,\n  TextInput,\n  Tooltip,\n  Grid,\n  Button,\n  ToastContextValue,\n  Inline,\n} from '@sanity/ui'\nimport {VisionCodeMirror} from '../codemirror/VisionCodeMirror'\nimport {getLocalStorage, LocalStorageish} from '../util/localStorage'\nimport {parseApiQueryString, ParsedApiQueryString} from '../util/parseApiQueryString'\nimport {validateApiVersion} from '../util/validateApiVersion'\nimport {prefixApiVersion} from '../util/prefixApiVersion'\nimport {tryParseParams} from '../util/tryParseParams'\nimport {encodeQueryString} from '../util/encodeQueryString'\nimport {API_VERSIONS, DEFAULT_API_VERSION} from '../apiVersions'\nimport {PERSPECTIVES, DEFAULT_PERSPECTIVE, isPerspective} from '../perspectives'\nimport {ResizeObserver} from '../util/resizeObserver'\nimport type {VisionProps} from '../types'\nimport {DelayedSpinner} from './DelayedSpinner'\nimport {ParamsEditor, type ParamsEditorChangeEvent} from './ParamsEditor'\nimport {ResultView} from './ResultView'\nimport {QueryErrorDialog} from './QueryErrorDialog'\nimport {PerspectivePopover} from './PerspectivePopover'\nimport {\n  Root,\n  Header,\n  SplitpaneContainer,\n  QueryCopyLink,\n  InputBackgroundContainer,\n  InputBackgroundContainerLeft,\n  InputContainer,\n  StyledLabel,\n  ResultOuterContainer,\n  ResultInnerContainer,\n  ResultContainer,\n  Result,\n  ControlsContainer,\n  ButtonFullWidth,\n  TimingsFooter,\n  TimingsCard,\n  TimingsTextContainer,\n} from './VisionGui.styled'\n\nfunction nodeContains(node: Node, other: EventTarget | Node | null): boolean {\n  if (!node || !other) {\n    return false\n  }\n\n  // eslint-disable-next-line no-bitwise\n  return node === other || !!(node.compareDocumentPosition(other as Node) & 16)\n}\n\nconst sanityUrl =\n  /\\.(?:api|apicdn)\\.sanity\\.io\\/(vX|v1|v\\d{4}-\\d\\d-\\d\\d)\\/.*?(?:query|listen)\\/(.*?)\\?(.*)/\nconst isRunHotkey = (event: KeyboardEvent) =>\n  isHotkey('ctrl+enter', event) || isHotkey('mod+enter', event)\n\ninterface PaneSizeOptions {\n  defaultSize: number\n  size?: number\n  allowResize: boolean\n  minSize: number\n  maxSize: number\n}\n\nfunction calculatePaneSizeOptions(rootHeight: number): PaneSizeOptions {\n  return {\n    defaultSize: rootHeight / 2,\n    size: rootHeight > 550 ? undefined : rootHeight * 0.4,\n    allowResize: rootHeight > 550,\n    minSize: Math.min(170, Math.max(170, rootHeight / 2)),\n    maxSize: rootHeight > 650 ? rootHeight * 0.7 : rootHeight * 0.6,\n  }\n}\n\ninterface Subscription {\n  unsubscribe: () => void\n}\n\ninterface VisionGuiProps extends VisionProps {\n  toast: ToastContextValue\n  datasets: string[]\n}\n\ninterface VisionGuiState {\n  // Selected options\n  dataset: string\n  apiVersion: string\n  customApiVersion: string | false\n  perspective: ClientPerspective\n\n  // Selected options validation state\n  isValidApiVersion: boolean\n\n  // URL used to execute query/listener\n  url?: string | undefined\n\n  // Inputs\n  query: string\n  rawParams: string\n\n  // Parsed input\n  params: Record<string, unknown> | Error | undefined\n  paramsError?: string | undefined\n  hasValidParams: boolean\n\n  // Query/listen result\n  queryResult?: unknown | undefined\n  listenMutations: MutationEvent[]\n  error?: Error | undefined\n\n  // Operation timings\n  queryTime?: number | undefined\n  e2eTime?: number | undefined\n\n  // Operation state, used to trigger re-renders (spinners etc)\n  queryInProgress: boolean\n  listenInProgress: boolean\n\n  // UI drawing state\n  paneSizeOptions: PaneSizeOptions\n}\n\nexport class VisionGui extends React.PureComponent<VisionGuiProps, VisionGuiState> {\n  _visionRoot: RefObject<HTMLDivElement>\n  _queryEditorContainer: RefObject<HTMLDivElement>\n  _paramsEditorContainer: RefObject<HTMLDivElement>\n  _operationUrlElement: RefObject<HTMLInputElement>\n  _customApiVersionElement: RefObject<HTMLInputElement>\n  _resizeListener: ResizeObserver | undefined\n  _querySubscription: Subscription | undefined\n  _listenSubscription: Subscription | undefined\n  _client: SanityClient\n  _localStorage: LocalStorageish\n\n  constructor(props: VisionGuiProps) {\n    super(props)\n\n    const {client, datasets, config} = props\n    this._localStorage = getLocalStorage(client.config().projectId || 'default')\n\n    const lastQuery = this._localStorage.get('query', '')\n    const lastParams = this._localStorage.get('params', '{\\n  \\n}')\n\n    const defaultDataset = config.defaultDataset || client.config().dataset || datasets[0]\n    const defaultApiVersion = prefixApiVersion(`${config.defaultApiVersion}`)\n    const defaultPerspective = DEFAULT_PERSPECTIVE\n\n    let dataset = this._localStorage.get('dataset', defaultDataset)\n    let apiVersion = this._localStorage.get('apiVersion', defaultApiVersion)\n    const customApiVersion = API_VERSIONS.includes(apiVersion) ? false : apiVersion\n    let perspective = this._localStorage.get('perspective', defaultPerspective)\n\n    if (!datasets.includes(dataset)) {\n      dataset = datasets.includes(defaultDataset) ? defaultDataset : datasets[0]\n    }\n\n    if (!API_VERSIONS.includes(apiVersion)) {\n      apiVersion = DEFAULT_API_VERSION\n    }\n\n    if (!PERSPECTIVES.includes(perspective)) {\n      perspective = DEFAULT_PERSPECTIVE\n    }\n\n    this._visionRoot = React.createRef()\n    this._operationUrlElement = React.createRef()\n    this._queryEditorContainer = React.createRef()\n    this._paramsEditorContainer = React.createRef()\n    this._customApiVersionElement = React.createRef()\n\n    this._client = props.client.withConfig({\n      apiVersion: customApiVersion || apiVersion,\n      dataset,\n      perspective: perspective,\n      allowReconfigure: true,\n    })\n\n    // Initial root height without header\n    const bodyHeight =\n      typeof window !== 'undefined' && typeof document !== 'undefined'\n        ? document.body.getBoundingClientRect().height - 60\n        : 0\n\n    const params = lastParams ? tryParseParams(lastParams) : undefined\n\n    this.state = {\n      // Selected options\n      dataset,\n      apiVersion,\n      customApiVersion,\n      perspective,\n\n      // Selected options validation state\n      isValidApiVersion: customApiVersion ? validateApiVersion(customApiVersion) : false,\n\n      // Inputs\n      query: lastQuery,\n      rawParams: lastParams,\n\n      // Parsed input\n      params,\n      hasValidParams: !(params instanceof Error),\n\n      // Query/listen results\n      listenMutations: [],\n\n      // Operation state\n      queryInProgress: false,\n      listenInProgress: false,\n\n      // UI drawing state\n      paneSizeOptions: calculatePaneSizeOptions(bodyHeight),\n    }\n\n    this.handleChangeDataset = this.handleChangeDataset.bind(this)\n    this.handleChangeApiVersion = this.handleChangeApiVersion.bind(this)\n    this.handleCustomApiVersionChange = this.handleCustomApiVersionChange.bind(this)\n    this.handleChangePerspective = this.handleChangePerspective.bind(this)\n    this.handleListenExecution = this.handleListenExecution.bind(this)\n    this.handleListenerEvent = this.handleListenerEvent.bind(this)\n    this.handleQueryExecution = this.handleQueryExecution.bind(this)\n    this.handleQueryChange = this.handleQueryChange.bind(this)\n    this.handleParamsChange = this.handleParamsChange.bind(this)\n    this.handleCopyUrl = this.handleCopyUrl.bind(this)\n    this.handlePaste = this.handlePaste.bind(this)\n    this.handleKeyDown = this.handleKeyDown.bind(this)\n    this.handleResize = this.handleResize.bind(this)\n  }\n\n  componentDidMount() {\n    window.document.addEventListener('paste', this.handlePaste)\n    window.document.addEventListener('keydown', this.handleKeyDown)\n\n    this.handleResizeListen()\n  }\n\n  componentWillUnmount() {\n    this.cancelQuery()\n    this.cancelListener()\n    this.cancelEventListener()\n    this.cancelResizeListener()\n  }\n\n  handleResizeListen() {\n    if (!this._visionRoot.current) {\n      return\n    }\n\n    this._resizeListener = new ResizeObserver(this.handleResize)\n    this._resizeListener.observe(this._visionRoot.current)\n  }\n\n  handleResize(entries: ResizeObserverEntry[]) {\n    const entry = entries?.[0]\n\n    this.setState((prevState) => ({\n      ...prevState,\n      paneSizeOptions: calculatePaneSizeOptions(entry.contentRect.height),\n    }))\n  }\n\n  cancelResizeListener() {\n    if (this._resizeListener) {\n      this._resizeListener.disconnect()\n    }\n  }\n\n  handlePaste(evt: ClipboardEvent) {\n    if (!evt.clipboardData) {\n      return\n    }\n\n    const data = evt.clipboardData.getData('text/plain')\n    const match = data.match(sanityUrl)\n    if (!match) {\n      return\n    }\n\n    const [, usedApiVersion, usedDataset, urlQuery] = match\n    let parts: ParsedApiQueryString\n\n    try {\n      const qs = new URLSearchParams(urlQuery)\n      parts = parseApiQueryString(qs)\n    } catch (err) {\n      console.warn('Error while trying to parse API URL: ', err.message) // eslint-disable-line no-console\n      return // Give up on error\n    }\n\n    let apiVersion: string | undefined\n    let customApiVersion: string | false | undefined\n\n    if (validateApiVersion(usedApiVersion)) {\n      if (API_VERSIONS.includes(usedApiVersion)) {\n        apiVersion = usedApiVersion\n        customApiVersion = false\n      } else {\n        customApiVersion = usedApiVersion\n      }\n    }\n\n    const perspective = PERSPECTIVES.includes(parts.options.perspective as ClientPerspective)\n      ? (parts.options.perspective as ClientPerspective)\n      : undefined\n\n    evt.preventDefault()\n    this.setState(\n      (prevState) => ({\n        dataset: this.props.datasets.includes(usedDataset) ? usedDataset : prevState.dataset,\n        query: parts.query,\n        params: parts.params,\n        rawParams: JSON.stringify(parts.params, null, 2),\n        apiVersion: typeof apiVersion === 'undefined' ? prevState.apiVersion : apiVersion,\n        customApiVersion:\n          typeof customApiVersion === 'undefined' ? prevState.customApiVersion : customApiVersion,\n        perspective: typeof perspective === 'undefined' ? prevState.perspective : perspective,\n      }),\n      () => {\n        this._localStorage.merge({\n          query: this.state.query,\n          params: this.state.params,\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this._client.config({\n          dataset: this.state.dataset,\n          apiVersion: customApiVersion || apiVersion,\n          perspective: this.state.perspective,\n        })\n        this.handleQueryExecution()\n        this.props.toast.push({\n          closable: true,\n          id: 'vision-paste',\n          status: 'info',\n          title: 'Parsed URL to query',\n        })\n      }\n    )\n  }\n\n  cancelQuery() {\n    if (!this._querySubscription) {\n      return\n    }\n\n    this._querySubscription.unsubscribe()\n    this._querySubscription = undefined\n  }\n\n  cancelListener() {\n    if (!this._listenSubscription) {\n      return\n    }\n\n    this._listenSubscription.unsubscribe()\n    this._listenSubscription = undefined\n  }\n\n  cancelEventListener() {\n    window.removeEventListener('keydown', this.handleKeyDown)\n  }\n\n  handleChangeDataset(evt: ChangeEvent<HTMLSelectElement>) {\n    const dataset = evt.target.value\n    this._localStorage.set('dataset', dataset)\n    this.setState({dataset})\n    this._client.config({dataset})\n    this.handleQueryExecution()\n  }\n\n  handleChangeApiVersion(evt: ChangeEvent<HTMLSelectElement>) {\n    const apiVersion = evt.target.value\n    if (apiVersion === 'other') {\n      this.setState({customApiVersion: 'v'}, () => {\n        this._customApiVersionElement.current?.focus()\n      })\n      return\n    }\n\n    this.setState({apiVersion, customApiVersion: false}, () => {\n      this._localStorage.set('apiVersion', this.state.apiVersion)\n      this._client.config({\n        apiVersion: this.state.apiVersion,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleCustomApiVersionChange(evt: ChangeEvent<HTMLInputElement>) {\n    const customApiVersion = evt.target.value || ''\n    const isValidApiVersion = validateApiVersion(customApiVersion)\n\n    this.setState(\n      (prevState) => ({\n        apiVersion: isValidApiVersion ? customApiVersion : prevState.apiVersion,\n        customApiVersion: customApiVersion || 'v',\n        isValidApiVersion,\n      }),\n      () => {\n        if (!this.state.isValidApiVersion || typeof this.state.customApiVersion !== 'string') {\n          return\n        }\n\n        this._localStorage.set('apiVersion', this.state.customApiVersion)\n        this._client.config({apiVersion: this.state.customApiVersion})\n      }\n    )\n  }\n\n  handleChangePerspective(evt: ChangeEvent<HTMLSelectElement>) {\n    const perspective = evt.target.value\n    if (!isPerspective(perspective)) {\n      return\n    }\n\n    this.setState({perspective}, () => {\n      this._localStorage.set('perspective', this.state.perspective)\n      this._client.config({\n        perspective: this.state.perspective,\n      })\n      this.handleQueryExecution()\n    })\n  }\n\n  handleListenerEvent(evt: ListenEvent<any>) {\n    if (evt.type !== 'mutation') {\n      this.props.toast.push({\n        closable: true,\n        id: 'vision-listen',\n        status: 'success',\n        title: 'Listening for mutations…',\n      })\n      return\n    }\n\n    this.setState(({listenMutations}) => ({\n      listenMutations:\n        listenMutations.length === 50\n          ? [evt, ...listenMutations.slice(0, 49)]\n          : [evt, ...listenMutations],\n    }))\n  }\n\n  handleKeyDown(event: KeyboardEvent) {\n    const {hasValidParams} = this.state\n    const isWithinRoot =\n      this._visionRoot.current && nodeContains(this._visionRoot.current, event.target)\n    if (isRunHotkey(event) && isWithinRoot && hasValidParams) {\n      this.handleQueryExecution()\n      event.preventDefault()\n      event.stopPropagation()\n    }\n  }\n\n  ensureSelectedApiVersion() {\n    const {apiVersion, customApiVersion} = this.state\n    const wantedApiVersion = customApiVersion || apiVersion\n    if (this._client.config().apiVersion !== wantedApiVersion) {\n      this._client.config({apiVersion: wantedApiVersion})\n    }\n  }\n\n  handleListenExecution() {\n    const {query, params, rawParams, listenInProgress} = this.state\n    if (listenInProgress) {\n      this.cancelListener()\n      this.setState({listenInProgress: false})\n      return\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const paramsError = params instanceof Error ? params : undefined\n    const encodeParams = params instanceof Error ? {} : params || {}\n    const url = this._client.getDataUrl('listen', encodeQueryString(query, encodeParams, {}))\n\n    const shouldExecute = !paramsError && query.trim().length > 0\n\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelQuery()\n\n    this.setState({\n      url,\n      listenMutations: [],\n      queryInProgress: false,\n      queryResult: undefined,\n      listenInProgress: shouldExecute,\n      error: paramsError,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!shouldExecute) {\n      return\n    }\n\n    this._listenSubscription = this._client\n      .listen(query, params, {events: ['mutation', 'welcome']})\n      .subscribe({\n        next: this.handleListenerEvent,\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            listenInProgress: false,\n          }),\n      })\n  }\n\n  handleQueryExecution() {\n    const {query, params, rawParams, queryInProgress} = this.state\n\n    if (queryInProgress) {\n      this.cancelQuery()\n      this.cancelListener()\n      this.setState({queryInProgress: false})\n      return true\n    }\n\n    const paramsError = params instanceof Error && params\n    this._localStorage.set('query', query)\n    this._localStorage.set('params', rawParams)\n\n    this.cancelListener()\n\n    this.setState({\n      queryInProgress: !paramsError && Boolean(query),\n      listenInProgress: false,\n      listenMutations: [],\n      error: paramsError || undefined,\n      queryResult: undefined,\n      queryTime: undefined,\n      e2eTime: undefined,\n    })\n\n    if (!query || paramsError) {\n      return true\n    }\n\n    this.ensureSelectedApiVersion()\n\n    const urlQueryOpts: Record<string, string> = {}\n    if (this.state.perspective !== 'raw') {\n      urlQueryOpts.perspective = this.state.perspective\n    }\n\n    const url = this._client.getUrl(\n      this._client.getDataUrl('query', encodeQueryString(query, params, urlQueryOpts))\n    )\n    this.setState({url})\n\n    const queryStart = Date.now()\n\n    this._querySubscription = this._client.observable\n      .fetch(query, params, {filterResponse: false, tag: 'vision'})\n      .subscribe({\n        next: (res) =>\n          this.setState({\n            queryTime: res.ms,\n            e2eTime: Date.now() - queryStart,\n            queryResult: res.result,\n            queryInProgress: false,\n            error: undefined,\n          }),\n        error: (error) =>\n          this.setState({\n            error,\n            query,\n            queryInProgress: false,\n          }),\n      })\n\n    return true\n  }\n\n  handleQueryChange(query: string) {\n    this.setState({query})\n  }\n\n  handleParamsChange({raw, parsed, valid, error}: ParamsEditorChangeEvent) {\n    this.setState(\n      {\n        rawParams: raw,\n        params: parsed,\n        hasValidParams: valid,\n        paramsError: error,\n      },\n      () => this._localStorage.set('params', raw)\n    )\n  }\n\n  handleCopyUrl() {\n    const el = this._operationUrlElement.current\n    if (!el) {\n      return\n    }\n\n    try {\n      el.select()\n      document.execCommand('copy')\n      this.props.toast.push({\n        closable: true,\n        title: 'Copied to clipboard',\n        status: 'info',\n        id: 'vision-copy',\n      })\n    } catch (err) {\n      // eslint-disable-next-line no-console\n      console.error('Unable to copy to clipboard :(')\n    }\n  }\n\n  render() {\n    const {datasets} = this.props\n    const {\n      error,\n      queryResult,\n      url,\n      queryInProgress,\n      listenInProgress,\n      paneSizeOptions,\n      queryTime,\n      e2eTime,\n      listenMutations,\n      apiVersion,\n      dataset,\n      customApiVersion,\n      isValidApiVersion,\n      hasValidParams,\n      paramsError,\n      perspective,\n    } = this.state\n    const hasResult = !error && !queryInProgress && typeof queryResult !== 'undefined'\n\n    return (\n      <Root\n        direction=\"column\"\n        height=\"fill\"\n        ref={this._visionRoot}\n        sizing=\"border\"\n        overflow=\"hidden\"\n      >\n        <Header paddingX={3} paddingY={2}>\n          <Grid columns={[6, 6, 12]}>\n            {/* Dataset selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>Dataset</StyledLabel>\n                </Card>\n                <Select value={dataset} onChange={this.handleChangeDataset}>\n                  {datasets.map((ds) => (\n                    <option key={ds}>{ds}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* API version selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingTop={2} paddingBottom={3}>\n                  <StyledLabel>API version</StyledLabel>\n                </Card>\n                <Select\n                  value={customApiVersion === false ? apiVersion : 'other'}\n                  onChange={this.handleChangeApiVersion}\n                >\n                  {API_VERSIONS.map((version) => (\n                    <option key={version}>{version}</option>\n                  ))}\n                  <option key=\"other\" value=\"other\">\n                    Other\n                  </option>\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Custom API version input */}\n            {customApiVersion !== false && (\n              <Box padding={1} column={2}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel textOverflow=\"ellipsis\">Custom API version</StyledLabel>\n                  </Card>\n\n                  <TextInput\n                    ref={this._customApiVersionElement}\n                    value={customApiVersion}\n                    onChange={this.handleCustomApiVersionChange}\n                    customValidity={isValidApiVersion ? undefined : 'Invalid API version'}\n                    maxLength={11}\n                  />\n                </Stack>\n              </Box>\n            )}\n\n            {/* Perspective selector */}\n            <Box padding={1} column={2}>\n              <Stack>\n                <Card paddingBottom={1}>\n                  <Inline space={1}>\n                    <Box>\n                      <StyledLabel>PERSPECTIVE</StyledLabel>\n                    </Box>\n\n                    <Box>\n                      <PerspectivePopover />\n                    </Box>\n                  </Inline>\n                </Card>\n\n                <Select value={perspective} onChange={this.handleChangePerspective}>\n                  {PERSPECTIVES.map((p) => (\n                    <option key={p}>{p}</option>\n                  ))}\n                </Select>\n              </Stack>\n            </Box>\n\n            {/* Query URL (for copying) */}\n            {typeof url === 'string' ? (\n              <Box padding={1} flex={1} column={customApiVersion === false ? 6 : 4}>\n                <Stack>\n                  <Card paddingTop={2} paddingBottom={3}>\n                    <StyledLabel>\n                      Query URL&nbsp;\n                      <QueryCopyLink onClick={this.handleCopyUrl}>[copy]</QueryCopyLink>\n                    </StyledLabel>\n                  </Card>\n                  <Flex flex={1} gap={1}>\n                    <Box flex={1}>\n                      <TextInput readOnly type=\"url\" ref={this._operationUrlElement} value={url} />\n                    </Box>\n                    <Tooltip\n                      content={\n                        <Box padding={2}>\n                          <Text>Copy to clipboard</Text>\n                        </Box>\n                      }\n                    >\n                      <Button\n                        aria-label=\"Copy to clipboard\"\n                        type=\"button\"\n                        mode=\"ghost\"\n                        icon={CopyIcon}\n                        onClick={this.handleCopyUrl}\n                      />\n                    </Tooltip>\n                  </Flex>\n                </Stack>\n              </Box>\n            ) : (\n              <Box flex={1} />\n            )}\n          </Grid>\n        </Header>\n        <SplitpaneContainer flex={1}>\n          {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n          <SplitPane split=\"vertical\" minSize={280} defaultSize={400} maxSize={-400}>\n            <Box height=\"stretch\" flex={1}>\n              {/*\n                  The way react-split-pane handles the sizes is kind of finicky and not clear. What the props above does is:\n                  - It sets the initial size of the panes to 1/2 of the total available height of the container\n                  - Sets the minimum size of a pane whatever is bigger of 1/2 of the total available height of the container, or 170px\n                  - The max size is set to either 60% or 70% of the available space, depending on if the container height is above 650px\n                  - Disables resizing when total height is below 500, since it becomes really cumbersome to work with the panes then\n                  - The \"primary\" prop (https://github.com/tomkp/react-split-pane#primary) tells the second pane to shrink or grow by the available space\n                  - Disables resize if the container height is less then 500px\n                  This should ensure that we mostly avoid a pane to take up all the room, and for the controls to not be eaten up by the pane\n                */}\n              {/* @ts-expect-error: https://github.com/tomkp/react-split-pane/pull/819 */}\n              <SplitPane\n                className=\"sidebarPanes\"\n                split=\"horizontal\"\n                defaultSize={paneSizeOptions.defaultSize}\n                size={paneSizeOptions.size}\n                allowResize={paneSizeOptions.allowResize}\n                minSize={paneSizeOptions.minSize}\n                maxSize={paneSizeOptions.maxSize}\n                primary=\"first\"\n              >\n                <InputContainer display=\"flex\" ref={this._queryEditorContainer}>\n                  <Box flex={1}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>Query</StyledLabel>\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <VisionCodeMirror value={this.state.query} onChange={this.handleQueryChange} />\n                  </Box>\n                </InputContainer>\n                <InputContainer display=\"flex\" ref={this._paramsEditorContainer}>\n                  <Card flex={1} tone={hasValidParams ? 'default' : 'critical'}>\n                    <InputBackgroundContainerLeft>\n                      <Flex>\n                        <StyledLabel muted>Params</StyledLabel>\n                        {paramsError && (\n                          <Tooltip\n                            placement=\"top-end\"\n                            portal\n                            content={\n                              <Box padding={2}>\n                                <Text>{paramsError}</Text>\n                              </Box>\n                            }\n                          >\n                            <Box padding={1} marginX={2}>\n                              <Text>\n                                <ErrorOutlineIcon />\n                              </Text>\n                            </Box>\n                          </Tooltip>\n                        )}\n                      </Flex>\n                    </InputBackgroundContainerLeft>\n                    <ParamsEditor value={this.state.rawParams} onChange={this.handleParamsChange} />\n                  </Card>\n                  {/* Controls (listen/run) */}\n                  <ControlsContainer>\n                    <Card padding={3} paddingX={3}>\n                      <Tooltip\n                        content={\n                          <Card padding={2} radius={4}>\n                            <Text size={1} muted>\n                              Parameters are not valid JSON\n                            </Text>\n                          </Card>\n                        }\n                        placement=\"top\"\n                        disabled={hasValidParams}\n                        portal\n                      >\n                        <Flex justify=\"space-evenly\">\n                          <Box flex={1}>\n                            <Tooltip\n                              content={\n                                <Card padding={2} radius={4}>\n                                  <Hotkeys keys={['Ctrl', 'Enter']} />\n                                </Card>\n                              }\n                              placement=\"top\"\n                              portal\n                            >\n                              <ButtonFullWidth\n                                onClick={this.handleQueryExecution}\n                                type=\"button\"\n                                icon={queryInProgress ? StopIcon : PlayIcon}\n                                disabled={listenInProgress || !hasValidParams}\n                                tone={queryInProgress ? 'positive' : 'primary'}\n                                text={queryInProgress ? 'Cancel' : 'Fetch'}\n                              />\n                            </Tooltip>\n                          </Box>\n                          <Box flex={1} marginLeft={3}>\n                            <ButtonFullWidth\n                              onClick={this.handleListenExecution}\n                              type=\"button\"\n                              icon={listenInProgress ? StopIcon : PlayIcon}\n                              text={listenInProgress ? 'Stop' : 'Listen'}\n                              mode=\"ghost\"\n                              disabled={!hasValidParams}\n                              tone={listenInProgress ? 'positive' : 'default'}\n                            />\n                          </Box>\n                        </Flex>\n                      </Tooltip>\n                    </Card>\n                  </ControlsContainer>\n                </InputContainer>\n              </SplitPane>\n            </Box>\n            <ResultOuterContainer direction=\"column\">\n              <ResultInnerContainer flex={1}>\n                <ResultContainer\n                  flex={1}\n                  overflow=\"hidden\"\n                  tone={error ? 'critical' : 'default'}\n                  $isInvalid={Boolean(error)}\n                >\n                  <Result overflow=\"auto\">\n                    <InputBackgroundContainer>\n                      <Box marginLeft={3}>\n                        <StyledLabel muted>Result</StyledLabel>\n                      </Box>\n                    </InputBackgroundContainer>\n                    <Box padding={3} paddingTop={5}>\n                      {(queryInProgress || (listenInProgress && listenMutations.length === 0)) && (\n                        <Box marginTop={3}>\n                          <DelayedSpinner />\n                        </Box>\n                      )}\n                      {error && <QueryErrorDialog error={error} />}\n                      {hasResult && <ResultView data={queryResult} />}\n                      {listenInProgress && listenMutations.length > 0 && (\n                        <ResultView data={listenMutations} />\n                      )}\n                    </Box>\n                  </Result>\n                </ResultContainer>\n              </ResultInnerContainer>\n              {/* Execution time */}\n              <TimingsFooter>\n                <TimingsCard paddingX={4} paddingY={3} sizing=\"border\">\n                  <TimingsTextContainer align=\"center\">\n                    <Box>\n                      <Text muted>\n                        Execution: {typeof queryTime === 'number' ? `${queryTime}ms` : 'n/a'}\n                      </Text>\n                    </Box>\n                    <Box marginLeft={4}>\n                      <Text muted>\n                        End-to-end: {typeof e2eTime === 'number' ? `${e2eTime}ms` : 'n/a'}\n                      </Text>\n                    </Box>\n                  </TimingsTextContainer>\n                </TimingsCard>\n              </TimingsFooter>\n            </ResultOuterContainer>\n          </SplitPane>\n        </SplitpaneContainer>\n      </Root>\n    )\n  }\n}\n","import type {SanityClient} from '@sanity/client'\nimport {useEffect, useState} from 'react'\n\nexport function useDatasets(client: SanityClient): string[] | Error | undefined {\n  const projectId = client.config().projectId\n  const [datasets, setDatasets] = useState<string[] | Error | undefined>()\n\n  useEffect(() => {\n    const datasets$ = client.observable.datasets.list().subscribe({\n      next: (result) => setDatasets(result.map((ds) => ds.name)),\n      error: (err) => setDatasets(err),\n    })\n\n    return () => datasets$.unsubscribe()\n  }, [client, projectId])\n\n  return datasets || undefined\n}\n","import {useToast} from '@sanity/ui'\nimport React from 'react'\nimport {DelayedSpinner} from '../components/DelayedSpinner'\nimport {VisionGui} from '../components/VisionGui'\nimport {useDatasets} from '../hooks/useDatasets'\nimport type {VisionProps} from '../types'\n\nexport function VisionContainer(props: VisionProps) {\n  const toast = useToast()\n  const loadedDatasets = useDatasets(props.client)\n  if (!loadedDatasets) {\n    return <DelayedSpinner />\n  }\n\n  const datasets =\n    loadedDatasets instanceof Error\n      ? // On error, use the clients configured dataset\n        [props.client.config().dataset || 'production']\n      : // Otherwise use the loaded list, obviously\n        loadedDatasets\n\n  return <VisionGui {...props} datasets={datasets} toast={toast} />\n}\n","import React from 'react'\nimport {type Tool, useClient} from 'sanity'\nimport {type VisionConfig} from './types'\nimport {DEFAULT_API_VERSION} from './apiVersions'\nimport {VisionContainer} from './containers/VisionContainer'\n\ninterface SanityVisionProps {\n  tool: Tool<VisionConfig>\n}\n\nfunction SanityVision(props: SanityVisionProps) {\n  const client = useClient({apiVersion: '1'})\n  const config: VisionConfig = {\n    defaultApiVersion: DEFAULT_API_VERSION,\n    ...props.tool.options,\n  }\n\n  return <VisionContainer client={client} config={config} />\n}\n\nexport default SanityVision\n"],"names":["API_VERSIONS","DEFAULT_API_VERSION","slice","DelayedSpinner","props","show","setShow","useState","useEffect","timer","setTimeout","delay","clearTimeout","jsx","Spinner","muted","size","codemirrorExtensions","javascriptLanguage","lineNumbers","highlightActiveLine","highlightActiveLineGutter","highlightSelectionMatches","highlightSpecialChars","indentOnInput","bracketMatching","closeBrackets","history","drawSelection","syntaxHighlighting","defaultHighlightStyle","fallback","keymap","of","defaultKeymap","historyKeymap","flat","filter","Boolean","useCodemirrorTheme","theme","cmTheme","useMemo","createTheme","cmHighlight","createHighlight","color","fonts","sanity","card","enabled","cursor","hues","blue","dark","hex","selection","gray","EditorView","fg","backgroundColor","bg","caretColor","fontFamily","code","family","fontSize","rem","sizes","lineHeight","borderLeftColor","borderBottom","concat","border","borderTop","c","base","s","syntax","HighlightStyle","define","tag","t","keyword","propertyName","name","deleted","character","macroName","property","function","variableName","labelName","constant","standard","variable","definition","separator","typeName","className","number","changed","annotation","modifier","self","namespace","operator","operatorKeyword","url","escape","regexp","link","special","string","meta","comment","strong","fontWeight","emphasis","fontStyle","strikethrough","textDecoration","heading","atom","bool","boolean","processingInstruction","inserted","invalid","_a","EditorRoot","styled","div","__template","_ref","space","_ref2","_ref3","VisionCodeMirror","sanityTheme","useTheme","children","CodeMirror","basicSetup","extensions","isPlainObject","obj","Object","prototype","toString","call","hasLocalStorage","supportsLocalStorage","getLocalStorage","storageKey","loadedState","get","set","merge","key","defaultVal","state","ensureState","value","localStorage","setItem","JSON","stringify","loadState","stored","parse","getItem","err","mod","removeItem","parseApiQueryString","qs","params","options","entries","query","validateApiVersion","apiVersion","parseableApiVersion","replace","trim","toUpperCase","isValidApiVersion","length","test","isNaN","Date","prefixApiVersion","version","tryParseParams","val","parsed","JSON5","Array","isArray","message","encodeQueryString","arguments","undefined","searchParams","URLSearchParams","PERSPECTIVES","DEFAULT_PERSPECTIVE","isPerspective","p","includes","RO","document","ResizeObserverPolyfill","window","ResizeObserver","defaultValue","ParamsEditor","onChange","raw","error","valid","eventFromValue","isValid","setValid","init","setInit","handleChangeRaw","useCallback","newValue","event","handleChange","debounce","parsedParams","Error","validationError","ResultViewWrapper","_ref4","css","lru","HLRU","ResultView","data","isRecord","JSONInspector","search","isExpanded","onClick","toggleExpanded","Code","language","keyPath","depthLimit","cached","segments","split","some","isArrayKeyOverLimit","path","current","numeric","segment","limit","parseInt","ErrorCode","_ref5","critical","QueryErrorDetails","_ref6","details","mapToLegacyDetails","line","dashLine","column","columnEnd","Box","marginTop","lineNumber","start","end","lineStart","lastIndexOf","match","indexOf","repeat","hats","QueryErrorDialog","jsxs","Stack","_b","PerspectivePopoverContent","PerspectivePopoverLink","a","PerspectivePopover","open","setOpen","buttonEl","setButtonEl","popoverEl","setPopoverEl","handleClick","o","handleClickOutside","useClickOutside","Popover","content","Inline","Text","weight","Badge","tone","Card","href","target","placement","portal","padding","ref","Button","icon","HelpCircleIcon","mode","selected","_c","_d","_e","_f","_g","_h","_i","_j","_k","_l","_m","_n","_o","_p","_q","_r","_s","Root","Flex","displayName","Header","StyledLabel","Label","SplitpaneContainer","QueryCopyLink","InputBackgroundContainer","InputBackgroundContainerLeft","InputContainer","ResultOuterContainer","ResultInnerContainer","ResultContainer","_ref7","$isInvalid","Result","TimingsFooter","TimingsCard","TimingsTextContainer","_ref8","text","ascenderHeight","descenderHeight","ControlsContainer","ButtonFullWidth","nodeContains","node","other","compareDocumentPosition","sanityUrl","isRunHotkey","isHotkey","calculatePaneSizeOptions","rootHeight","defaultSize","allowResize","minSize","Math","min","max","maxSize","VisionGui","React","PureComponent","constructor","__publicField","client","datasets","config","_localStorage","projectId","lastQuery","lastParams","defaultDataset","dataset","defaultApiVersion","defaultPerspective","customApiVersion","perspective","_visionRoot","createRef","_operationUrlElement","_queryEditorContainer","_paramsEditorContainer","_customApiVersionElement","_client","withConfig","allowReconfigure","bodyHeight","body","getBoundingClientRect","height","rawParams","hasValidParams","listenMutations","queryInProgress","listenInProgress","paneSizeOptions","handleChangeDataset","bind","handleChangeApiVersion","handleCustomApiVersionChange","handleChangePerspective","handleListenExecution","handleListenerEvent","handleQueryExecution","handleQueryChange","handleParamsChange","handleCopyUrl","handlePaste","handleKeyDown","handleResize","componentDidMount","addEventListener","handleResizeListen","componentWillUnmount","cancelQuery","cancelListener","cancelEventListener","cancelResizeListener","_resizeListener","observe","entry","setState","prevState","contentRect","disconnect","evt","clipboardData","getData","usedApiVersion","usedDataset","urlQuery","parts","console","warn","preventDefault","toast","push","closable","id","status","title","_querySubscription","unsubscribe","_listenSubscription","removeEventListener","focus","type","_ref9","isWithinRoot","stopPropagation","ensureSelectedApiVersion","wantedApiVersion","paramsError","encodeParams","getDataUrl","shouldExecute","queryResult","queryTime","e2eTime","listen","events","subscribe","next","urlQueryOpts","getUrl","queryStart","now","observable","fetch","filterResponse","res","ms","result","_ref10","el","select","execCommand","render","hasResult","direction","sizing","overflow","paddingX","paddingY","Grid","columns","paddingTop","paddingBottom","Select","map","ds","textOverflow","TextInput","customValidity","maxLength","flex","gap","readOnly","Tooltip","CopyIcon","SplitPane","primary","display","marginX","ErrorOutlineIcon","radius","disabled","justify","Hotkeys","keys","StopIcon","PlayIcon","marginLeft","align","useDatasets","setDatasets","datasets$","list","VisionContainer","useToast","loadedDatasets","SanityVision","useClient","tool"],"mappings":"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"}